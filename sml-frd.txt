>>>DOCUMENT.sml-frd

title:: Functional Requirements Document (FRD)

subtitle:: SML Data Format[linebreak]and[linebreak]SML Software Library

abbreviation:: FRD

author:: Don Johnson

copyright:: 2002-2012, Don Johnson

doctype:: book

logo_image_small:: files/images/sml_logo.png

logo_image_center:: files/images/crags.jpg

version:: 2.0

revision:: 31415

date:: 16 Dec 2015

use_formal_status:: 1

######################################################################

>>>VERSION_HISTORY

ver:: 0.5 = 2012-03-25 = Added rq-000201 "Validate Allowed Entity
Properties", and rq-000202 "Validate Entity Relationships"

ver:: 0.4 = 2012-03-23 = Re-organized system requirements into
functional and technical categories; Updated glossary organization

ver:: 0.3 = 2012-02-15 = Added requirement for internal hyperlinks,
updated template function requirements, updated all requirement status
(informal) and supplied status explanations.

ver:: 0.2 = 2011-06-16 = Added a significant number of new data format
requirements plus other constraints like the data format must use
7-bit ASCII and be human readable.

ver:: 0.1 = 2011-04-08 = Initial draft.

<<<VERSION_HISTORY

######################################################################

* Introduction

type:: chapter

This is the [a:SML:FRD] for the [a:SML] data format.  The required
data format will be used to represent book, article, and report
manuscripts that will be published to multiple document renditions by
a publishing application.

Intended applications of this data format include: (1) requirements
documentation, (2) design documentation, (3) test documentation, (4)
training documentation, and (5) project plans.

The overarching purpose of the data format is to enable authors to
create readable, modular, re-usable documents and document fragments
they can automatically publish to multiple different renditions.
Authors shouldn't have to re-write the same information twice.
Therefore they need the capability to combine and re-use fragments of
documents to create whole documents.

Why call it a [acl:SML] data format?

The term [g:SML:manuscript] implies that I intend authors to use the
language to manually capture their ideas in an original form that can
be processed and published in a variety of ways.

The term [g:SML:semantic] implies the language must have a structured
mechanism to express the ~~meaning~~ of the text so that processing
applications can automatically ~~reason~~ about document content.  For
instance, I want applications to have the capability to validate that
text conforms to the meaning expressed in a user-defined
[g:SML:ontology].

The concept of a ``semantic manuscript'' aligns well with my purpose
to enable authors to create readable, modular, re-usable documents and
document fragments they can automatically publish to multiple
different document renditions and to write applications that can
reason about the meaning of their documents.

######################################################################

* Key Terms and Definitions

This section defines key terms used in this document.  The glossary
contains a complete collection of terms and their definitions.

= [g:IEEE:baseline] = [def:IEEE:baseline]

= [g:IEEE:allocated baseline] = [def:IEEE:allocated baseline]

= [g:CMMI:bidirectional traceability] = [def:CMMI:bidirectional traceability]

= [a:BRD] = [acl:BRD]

= [g:SML:business requirement] = [def:SML:business requirement]

= [g:SML:compliance directive] = [def:SML:compliance directive]

= [g:IEEE:component] = [def:IEEE:component]

= [g:CMMI:customer requirement] = [def:CMMI:customer requirement]

= [g:SML:demonstration] = [def:SML:demonstration]

= [g:CMMI:derived requirements] = [def:CMMI:derived requirements]

= [g:IEEE:design requirement] = [def:IEEE:design requirement]

= [g:SML:feasibility] = [def:SML:feasibility]

= [a:SML:FRD] = [acl:SML:FRD]

= [g:CMMI:functional analysis] = [def:CMMI:functional analysis]

= [g:CMMI:functional architecture] = [def:CMMI:functional architecture]

= [g:IEEE:functional baseline] = [def:IEEE:functional baseline]

= [g:IEEE:functional configuration audit] = [def:IEEE:functional configuration audit]

= [g:SML:functional requirement] = [def:SML:functional requirement]

= [g:SML:Functional Requirements Document] = [def:SML:Functional Requirements Document]

= [g:IEEE:functional specification] = [def:IEEE:functional specification]

= [g:IEEE:interface requirement] = [def:IEEE:interface requirement]

= [g:IEEE:implementation requirement] = [def:IEEE:implementation requirement]

= [g:SML:mission directive] = [def:SML:mission directive]

= [g:SML:non-functional requirement] = [def:SML:non-functional requirement]

= [g:SML:operational baseline] = [def:SML:operational baseline]

= [g:CMMI:operational scenario] = [def:CMMI:operational scenario]

= [g:IEEE:performance requirement] = [def:IEEE:performance requirement]

= [g:IEEE:physical requirement] = [def:IEEE:physical requirement]

= [g:IEEE:product baseline] = [def:IEEE:product baseline]

= [g:CMMI:product requirements] = [def:CMMI:product requirements]

= [g:IEEE:qualification requirement] = [def:IEEE:qualification requirement]

= [g:SML:release] = [def:SML:release]

= [g:SML:requirement] = [def:SML:requirement]

= [g:CMMI:requirements analysis] = [def:CMMI:requirements analysis]

= [g:CMMI:requirements elicitation] = [def:CMMI:requirements elicitation]

= [g:CMMI:requirements management] = [def:CMMI:requirements management]

= [g:IEEE:requirements phase] = [def:IEEE:requirements phase]

= [g:IEEE:requirements specification] = [def:IEEE:requirements specification]

= [g:CMMI:requirements traceability] = [def:CMMI:requirements traceability]

= [g:SML:requirements traceability matrix] = [def:SML:requirements traceability matrix]

= [a:SML:RTM] = [acl:SML:RTM]

= [g:SML:shall statement] = [def:SML:shall statement]

= [a:SML:SRD] = [acl:SML:SRD]

= [a:IEEE:SRR] = [acl:IEEE:SRR]

= [g:IEEE:software requirements review] = [def:IEEE:software requirements review]

= [g:IEEE:Software Requirements Specification] = [def:IEEE:Software Requirements Specification]

= [g:IEEE:System Requirements Review] = [def:IEEE:System Requirements Review]

= [g:SML:systems engineering] = [def:SML:systems engineering]

= [g:SML:system requirement] = [def:SML:system requirement]

= [g:SML:technical requirement] = [def:SML:technical requirement]

= [g:IEEE:testability] = [def:IEEE:testability]

= [g:IEEE:traceability] = [def:IEEE:traceability]

= [g:IEEE:traceability matrix] = [def:IEEE:traceability matrix]

= [g:SML:use case] = [def:SML:use case]

= [g:IEEE:validation] = [def:IEEE:validation]

= [g:IEEE:verification] = [def:IEEE:verification]

= [g:IEEE:verification and validation] = [def:IEEE:verification and validation]

######################################################################

# Perform Functions For Users

* plugin:: Parts2Sections rq-000104

######################################################################

# Represent Document Content

* plugin:: Parts2Sections rq-000107

######################################################################

# Satisfy Non-Functional Requirements

* plugin:: Parts2Sections rq-000111

######################################################################

# Satisfy Technical Requirements

* plugin:: Parts2Sections rq-000199

######################################################################
# Backmatter

include:: acronyms-sml

include:: acronyms-ieee

include:: acronyms-cmmi

include:: glossary-sml

include:: glossary-ieee

include:: glossary-cmmi

include:: sources

include:: sources-ieee

include:: sources-cmmi

######################################################################
# Local Emacs Variables
#

# Local Variables:
# mode: outline
# mode: fill
# coding: us-ascii
# fill-column: 70
# End:

######################################################################

<<<DOCUMENT
