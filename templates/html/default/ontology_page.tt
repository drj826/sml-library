[%# args:

library => an SML::Library object

%]
[%-

ontology = library.get_ontology

-%]
[%- WRAPPER library_page.tt -%]

<h1 align="center">Ontology</h1>

[%- INCLUDE ontology_button_bar.tt -%]

[%- FOREACH entity_name IN ontology.get_entity_name_list -%]
  [%-
  entity_class = ontology.get_class_for_division_name(entity_name)
  -%]
<h2 style="background-color:#eeeeee;padding:10px;" id="[%entity_name%]">[%entity_name%]</h2>

<table>

<tr>
<td style="width:15%">class:</td>
<td>[%entity_class%]</td>
</tr>

<tr>
<td>required properties:</td>
<td>
[%- required_property_list = ontology.get_list_of_required_property_names_for_division_name(entity_name) -%]
[%required_property_list.join(', ')%]
</td>
</tr>

<tr>
<td>may contain:</td>
<td>
[%- FOREACH division_name IN ontology.get_allowed_containee_name_list(entity_name) -%]
<a href="#[%division_name%]">[%division_name%]</a>, 
[%- END -%]
</td>
</tr>

</table>

<table>

<tr>
<td style="font-weight:bold;">rule ID</td>
<td style="font-weight:bold;">subject</td>
<td style="font-weight:bold;">property (predicate)</td>
<td style="font-weight:bold;">object</td>
<td style="font-weight:bold;">allowed values</td>
<td style="font-weight:bold;">inverse rule</td>
<td style="font-weight:bold;">cardinality</td>
<td style="font-weight:bold;">required?</td>
<td style="font-weight:bold;">imply only?</td>
</tr>

[%- property_name_list = ontology.get_list_of_allowed_property_names_for_division_name(entity_name) -%]

[%- FOREACH property_name IN property_name_list -%]
  [%-
  allowed_value_list = ontology.get_allowed_property_value_list(entity_name,property_name)
  object_name_list   = ontology.get_allowed_property_object_name_list(entity_name,property_name)
  is_required        = ontology.property_is_required(entity_name,property_name)
  is_imply_only      = ontology.property_is_imply_only(entity_name,property_name)
  cardinality        = ontology.property_allows_cardinality(entity_name,property_name)
  -%]
  [%- FOREACH object_name IN object_name_list -%]
    [%-
    rule            = ontology.get_rule_for(entity_name,property_name,object_name)
    rule_id         = rule.get_id
    inverse_rule_id = rule.get_inverse_rule_id
    -%]
<tr>
<td id="[%rule_id%]">[%rule_id%]</td>
<td>[%entity_name%]</td>
<td>[%property_name%]</td>

<td>
[%- IF object_name != 'STRING' -%]
<a href="#[%object_name%]">[%object_name%]</a>
[%- ELSE -%]
[%object_name%]
[%- END -%]
</td>

<td>[%allowed_value_list.join(', ')%]</td>
<td><a href="#[%inverse_rule_id%]">[%inverse_rule_id%]</a></td>
<td style="text-align:center;">[%cardinality%]</td>
<td style="text-align:center;">[%is_required%]</td>
<td style="text-align:center;">[%is_imply_only%]</td>
</tr>
[%- END -%]
[%- END -%]

</table>

[%- END -%]

[%- FOREACH structure_name IN ontology.get_structure_name_list -%]
  [%-
  structure_class = ontology.get_class_for_division_name(structure_name)
  -%]
<h2 style="background-color:#eeeeee;padding:10px;" id="[%structure_name%]">[%structure_name%]</h2>

<table>

<tr>
<td style="width:15%">class:</td>
<td>[%structure_class%]</td>
</tr>

<tr>
<td>required properties:</td>
<td>
[%- required_property_list = ontology.get_list_of_required_property_names_for_division_name(structure_name) -%]
[%required_property_list.join(', ')%]
</td>
</tr>

<tr>
<td>may contain:</td>
<td>
[%- FOREACH division_name IN ontology.get_allowed_containee_name_list(structure_name) -%]
<a href="#[%division_name%]">[%division_name%]</a>, 
[%- END -%]
</td>
</tr>

</table>

<table>

<tr>
<td style="font-weight:bold;">rule ID</td>
<td style="font-weight:bold;">subject</td>
<td style="font-weight:bold;">property (predicate)</td>
<td style="font-weight:bold;">object</td>
<td style="font-weight:bold;">allowed values</td>
<td style="font-weight:bold;">inverse rule</td>
<td style="font-weight:bold;">cardinality</td>
<td style="font-weight:bold;">required?</td>
<td style="font-weight:bold;">imply only?</td>
</tr>

[%- property_name_list = ontology.get_list_of_allowed_property_names_for_division_name(structure_name) -%]

[%- FOREACH property_name IN property_name_list -%]
  [%-
  allowed_value_list = ontology.get_allowed_property_value_list(structure_name,property_name)
  object_name_list   = ontology.get_allowed_property_object_name_list(structure_name,property_name)
  is_required        = ontology.property_is_required(structure_name,property_name)
  is_imply_only      = ontology.property_is_imply_only(structure_name,property_name)
  cardinality        = ontology.property_allows_cardinality(structure_name,property_name)
  -%]
  [%- FOREACH object_name IN object_name_list -%]
    [%-
    rule    = ontology.get_rule_for(structure_name,property_name,object_name)
    rule_id = rule.get_id
    inverse_rule_id = rule.get_inverse_rule_id
    -%]
<tr>
<td>[%rule_id%]</td>
<td>[%structure_name%]</td>
<td>[%property_name%]</td>
<td>
[%- IF object_name != 'STRING' -%]
<a href="#[%object_name%]">[%object_name%]</a>
[%- ELSE -%]
[%object_name%]
[%- END -%]
</td>

<td>[%allowed_value_list.join(', ')%]</td>
<td><a href="#[%inverse_rule_id%]">[%inverse_rule_id%]</a></td>
<td style="text-align:center;">[%cardinality%]</td>
<td style="text-align:center;">[%is_required%]</td>
<td style="text-align:center;">[%is_imply_only%]</td>
</tr>
[%- END -%]
[%- END -%]

</table>

[%- END -%]
[%- END -%]
