>>>requirement.rq-000094

title:: Represent the Result of a Review

revision:: $Revision: 10973 $

date:: $Date: 2012-10-27 14:46:35 -0600 (Sat, 27 Oct 2012) $

author:: $Author: don.johnson $

priority:: routine

is_part_of:: rq-000035

type:: data format

associated:: rq-000095

description:: The data format shall have the capability to represent
the result of a review.  A review is an ~~informal~~ evaluation of an
item's status.  Any item with a status attribute may be the subject of
a review (problem, solution, test, task, exercise, demonstration,
etc.).  The data format must have the capability to represent the date
of review, label of item reviewed, item status determined by the
review, and a one-paragraph explanation of how the status was
determined.

index:: [id:rq-000094]

Reviews may have the following meta data elements:

:: element

:: description

:: type

:: required?

:: cardinality

---

:yellow: ~~date~~

:yellow: Date of the review

:yellow: date

:yellow: required

:yellow: single

---

:yellow: ~~item~~

:yellow: Label of item reviewed

:yellow: ID

:yellow: required

:yellow: single

---

:yellow: ~~status~~

:yellow: Status of item determined by review

:yellow: status

:yellow: required

:yellow: single

---

: ~~explanation~~

: One paragraph explanation of reasoning for assigning the status
determined by the review

: block

: optional

: single

---

Note that ~~reviews~~ are for documenting the ~~informally~~
determined status of an item.  ~~Outcomes~~, on the other hand, are
for documenting the ~~formally~~ determined status of an item (See
[id:rq-000095]).

~~Reviews~~ and ~~outcomes~~ should have a similar data format to make
it easy to promote a review to an outcome.

<<<requirement
